name: build
run-name: ${{ github.actor }} is building ${{ github.ref_name }} ðŸš€
on: [push]

env:
 REGISTRY: ghcr.io
 IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
     contents: read
     packages: write
    steps:
    # Checkout repository
    # - name: Checkout
    #   uses: actions/checkout@v3
    - name: Checkout
      run: /usr/bin/git init /home/runner/work/mercari-build-training/mercari-build-training &&
           /usr/bin/git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin +12610e3b0d5a06da852a16d63bde3a754264df79:refs/remotes/origin/fumiya-kume-patch-2 &&
            /usr/bin/git config --local --name-only --get-regexp core\.sshCommand &&
  /usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :" &&
  /usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader &&
  /usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
       registry: ${{ env.REGISTRY }}
       username: ${{ github.actor }}
       password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
       images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Check variables
      run: |
        echo 'Current path:'
        pwd
        echo 'Tag: ${{ steps.meta.outputs.tags }}'
        echo 'Label: ${{ steps.meta.labels.tags }}'

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
       context: go
       push: true
       tags: ${{ steps.meta.outputs.tags }}
       labels: ${{ steps.meta.outputs.labels }}
